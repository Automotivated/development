version: "3"

services:
  # NginX
  nginx:
    build:
      context: "${NGINX_ROOT}"
    ports:
      - "81:80"
    networks:
      - server
    volumes:
      - "${PROJECT_ROOT}:/var/www/Automotivated:ro"
      - ./logs:/var/log/nginx
      - "${NGINX_ROOT}/config/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "${NGINX_ROOT}/config/default.conf:/etc/nginx/conf.d/default.conf:ro"
    restart: always
    depends_on:
      - php

  # Apache
  apache:
    build:
      context: "${APACHE_ROOT}"
    ports:
      - "80:80"
    networks:
      - server
    volumes:
      - "${PROJECT_ROOT}:/var/www/Automotivated:ro"
      - ./logs:/var/log/apache2
      - "${APACHE_ROOT}/vhosts:/etc/apache2/vhosts.d:ro"
    restart: always
    depends_on:
      - php

  # PHP
  php:
    build:
      context: "${PHP_ROOT}"
    networks:
      - server
      - database
      - esnet
    volumes:
      - "${PROJECT_ROOT}:/var/www/Automotivated"
      - "${PHP_ROOT}/config/php.ini:/etc/php7/php.ini:ro"
    restart: always
    depends_on:
      - mysql

  # MySQL
  mysql:
    image: mysql:latest
    networks:
      - database
    volumes:
      - "data:/var/lib/mysql"
      - "./services/mysql/dump/:/docker-entrypoint-initdb.d"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"

  # Elasticsearch
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.3.0
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - esnet

networks:
  server:
  database:
  esnet:
    driver: bridge

volumes:
  data:
  esdata:
